<Window x:Class="WPFUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
         xmlns:viewModels="clr-namespace:Engine.ViewModels;assembly=Engine"
        d:DataContext="{d:DesignInstance viewModels:GameSession}"
        xmlns:local="clr-namespace:WPFUI"
        mc:Ignorable="d"
        FontSize="11pt"
        Title="Kamar's Game" Height="768" Width="1024">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibility" /> <!-- convert bool to hidden/not hidden for buttons -->
    </Window.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/> <!--Give whatever we place in here only the exact space it needs  -->
            <RowDefinition Height="*"/> <!-- Give the element we place here, ALL avalible space -->
            <RowDefinition Height="225"/> <!-- we have a a pre-defined height-->
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Main Menu -->
        <Label Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Content="Menu" Background="AliceBlue"/>
        
        <!-- PLayer Stats -->
        <Label Grid.Row="1" Grid.Column="0" Content="Player Data" Background="LavenderBlush"/>
        <Grid Grid.Row="1" Grid.Column="0" Background="LavenderBlush">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Label Grid.Row="0" Grid.Column="0" Content="Name:"/>
            <Label Grid.Row="0" Grid.Column="1" Content="{Binding CurrentPlayer.Name}"/>
            <Label Grid.Row="1" Grid.Column="0" Content="Class:"/>
            <Label Grid.Row="1" Grid.Column="1" Content="{Binding CurrentPlayer.CharacterClass}"/>
            <Label Grid.Row="2" Grid.Column="0" Content="Hit Points:"/>
            <Label Grid.Row="2" Grid.Column="1" Content="{Binding CurrentPlayer.HitPoints}"/>
            <Label Grid.Row="3" Grid.Column="0" Content="Gold:"/>
            <Label Grid.Row="3" Grid.Column="1" Content="{Binding CurrentPlayer.Gold}"/>
            <Label Grid.Row="4" Grid.Column="0" Content="Experience Points:"/>
            <Label Grid.Row="4" Grid.Column="1" Content="{Binding CurrentPlayer.ExperiencePoints}"/>
            <Label Grid.Row="5" Grid.Column="0" Content="Level:"/>
            <Label Grid.Row="5" Grid.Column="1" Content="{Binding CurrentPlayer.Level}"/>
        </Grid>

           <!-- Gameplay-->
        <Grid Grid.Row="1" Grid.Column="1"
              Background="Bisque">

            <Grid.RowDefinitions>
                <RowDefinition Height="*" />  <!-- Both Rows will get an even amount of space-->
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" /> <!-- Devide into fifths-->
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>
            
            <!-- Game Messages -->
            <Border Grid.Row="0" Grid.Column="0" 
                    Grid.RowSpan="2"
                    BorderBrush="Gainsboro"
                    BorderThickness="1">

                <RichTextBox x:Name="GameMessages"
                             Background="Beige"
                            VerticalScrollBarVisibility="Auto">
                    <RichTextBox.Resources>
                        <Style TargetType="{x:Type Paragraph}">
                            <Setter Property="Margin" Value="0"/> <!-- So there is no extra space between messages.-->
                        </Style>
                    </RichTextBox.Resources>
                </RichTextBox>
            </Border>
            
            <!-- Location Info -->

            <Border Grid.Row="0" Grid.Column="1" BorderBrush="Gainsboro"  BorderThickness="1">

                <Grid Margin="3">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/> <!-- Use only as much space as needed -->
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" HorizontalAlignment="Center" Text="{Binding CurrentLocation.Name}" />

                    <Image Grid.Row="1" 
                           HorizontalAlignment="Center" 
                           VerticalAlignment="Center" 
                           Height="125" 
                           Width="125" 
                           Source="{Binding CurrentLocation.ImageName}" />

                    <TextBlock Grid.Row="2" HorizontalAlignment="Center" Text="{Binding CurrentLocation.Description}" TextWrapping="Wrap" />

                </Grid>
            </Border>

            <!-- Monster Info -->
            <Border Grid.Row="1" Grid.Column="1"
         BorderBrush="Gainsboro"
         BorderThickness="1">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <!-- Name -->
                        <RowDefinition Height="*" />
                        <!--image -->
                        <RowDefinition Height="Auto" />
                        <!-- CurrentHitPoints -->
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0"
                    HorizontalAlignment="Center"
                    Height="Auto"
                    Text="{Binding CurrentMonster.Name}" />
                    <Image Grid.Row="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Height="125"
                Width="125"
                Source="{Binding CurrentMonster.ImageName}" />
                    <StackPanel Grid.Row="2"
                     Visibility="{Binding HasMonster, Converter={StaticResource BooleanToVisibility}}"
                     HorizontalAlignment="Center"
                     Orientation="Horizontal">
                        <TextBlock>Current Hit Points: </TextBlock>
                        <TextBlock Text="{Binding CurrentMonster.HitPoints}" />
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>
       
        <!-- Inventory/Quests -->
        <Grid Grid.Row="2" Grid.Column="0" Background="LemonChiffon">

            <TabControl>
                <TabItem Header="Inventory">

                    <DataGrid ItemsSource="{Binding CurrentPlayer.Inventory}"
                              AutoGenerateColumns="False" HeadersVisibility="Column">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Description" Binding="{Binding Name}"
                                                Width="*"/>
                            <DataGridTextColumn Header="Price" Binding="{Binding Price}"
                                                Width="Auto"/>
                        </DataGrid.Columns>
                        
                    </DataGrid>
                </TabItem>
                <TabItem Header="Quests">
                    <DataGrid ItemsSource="{Binding CurrentPlayer.Quests}"
                              AutoGenerateColumns="false"
                              HeadersVisibility="Column">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Name" Binding="{Binding PlayerQuest.Name}"
                                                Width="*"/>
                            <!-- PlayerQuest is of type Quest so it also has a propty called Name 
                            which is what we access to diplay the name of the quest.-->
                            <DataGridTextColumn Header="Done?" Binding="{Binding isCompleted}"
                                                Width="Auto" />
                        </DataGrid.Columns>
                    </DataGrid>
                </TabItem>
            </TabControl>
        </Grid>
    
        <!-- PLayer Controls -->
        <Grid Grid.Row="2" Grid.Column="1" Background="Lavender" >
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="255" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Row="0" Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>


                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <!--use as much space as they can -->
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

            
            <!-- -->
                <Button Grid.Row="0" Grid.Column="1" Height="25" 
                        Width="65" Margin="10" Click="OnClick_MoveNorth" 
                        Visibility="{Binding HasLocationToNorth, Converter={StaticResource BooleanToVisibility}}" Content="North"/>
                <Button Grid.Row="1" Grid.Column="0" Height="25" 
                        Width="65" Margin="10" Click="OnClick_MoveWest" 
                        Visibility="{Binding HasLocationToWest, Converter={StaticResource BooleanToVisibility}}" Content="West"/>
                <Button Grid.Row="1" Grid.Column="2" Height="25" 
                        Width="65" Margin="10" Click="OnClick_MoveEast"
                        Visibility="{Binding HasLocationToEast, Converter={StaticResource BooleanToVisibility}}" Content="East"/>
                <Button Grid.Row="2" Grid.Column="1"  Height="25" 
                        Width="65" Margin="10" Click="OnClick_MoveSouth"
                        Visibility="{Binding HasLocationToSouth, Converter={StaticResource BooleanToVisibility}}" Content="South"/>

            </Grid>

        </Grid>

    </Grid>
</Window>
